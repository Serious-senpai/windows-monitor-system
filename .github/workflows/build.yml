name: Build

on: [ push, pull_request ]

env:
  WINDOWS_MONITOR_PASSWORD: password

permissions:
  contents: read

jobs:
  build:
    name: Test build
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64-pc-windows-msvc, i686-pc-windows-msvc, x86_64-pc-windows-gnu, x86_64-pc-windows-msvc]

    env:
      CARGO_BUILD_TARGET: ${{ matrix.target }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.89
          target: ${{ matrix.target }}
          cache: false

      - name: Setup workspace
        run: scripts\setup.bat

      - name: Install Inno Setup
        shell: cmd
        run: |
          curl https://files.jrsoftware.org/is/6/innosetup-6.5.4.exe --output innosetup-6.5.4.exe
          innosetup-6.5.4.exe /verysilent /dir="%cd%\inno-setup"
          dir inno-setup

      - name: Build utility
        run: cargo build --release -p utility

      - name: Build wm-api-service
        run: cargo build --release -p wm-api-service

      - name: Build wm-client
        run: cargo build --release -p wm-client

      - name: Build wm-common
        run: cargo build --release -p wm-common

      - name: Build wm-data-service
        run: cargo build --release -p wm-data-service

      - name: Build wm-generated
        run: cargo build --release -p wm-generated

      - name: Build agent installer
        shell: cmd
        run: |
          tree /f
          inno-setup\iscc.exe scripts\package.iss

      - name: Package executables
        shell: cmd
        run: |
          mkdir packages packages\cert packages\utility packages\wm-api-service packages\wm-client packages\wm-data-service
          xcopy cert packages\cert\

          copy target\release\utility.exe packages\utility\

          copy target\release\wm-api-service.exe packages\wm-api-service\
          copy target\release\api-service-config.yml packages\wm-api-service\

          copy target\release\wm-client.exe packages\wm-client\
          copy target\release\client-config.yml packages\wm-client\

          copy target\release\wm-data-service.exe packages\wm-data-service\
          copy target\release\data-service-config.yml packages\wm-data-service\

          copy target\windows-monitor-installer.exe packages\

          tree /f packages

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: packages
